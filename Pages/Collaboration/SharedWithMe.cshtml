@page
@model TaskManagement.Pages.Collaboration.SharedWithMeModel
@using TaskManagement.Models
@{
    ViewData["Title"] = "Tasks Shared With Me";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Tasks Shared With Me</h1>
    </div>

    @if (!string.IsNullOrEmpty(Model.StatusMessage))
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            @Model.StatusMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.SharedTasks.Count == 0)
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>You don't have any tasks shared with you yet.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead class="table-light">
                    <tr>
                        <th>Task</th>
                        <th>Shared By</th>
                        <th>Due Date</th>
                        <th>Priority</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var task in Model.SharedTasks)
                    {
                        <tr>
                            <td>
                                <strong>@task.Title</strong>
                                @if (!string.IsNullOrEmpty(task.Description))
                                {
                                    <p class="small text-muted mb-0">@(task.Description?.Length > 100 ? task.Description?.Substring(0, 100) + "..." : task.Description)</p>
                                }
                            </td>
                            <td>@task.User?.Username</td>
                            <td>
                                @if (task.DueDate.HasValue)
                                {
                                    var dueClass = task.DueDate < DateTime.Now && !task.IsCompleted
                                        ? "text-danger fw-bold"
                                        : task.DueDate < DateTime.Now.AddDays(1) && !task.IsCompleted
                                            ? "text-warning fw-bold"
                                            : "";
                                    <span class="@dueClass">@task.DueDate.Value.ToString("MMM d, yyyy")</span>
                                }
                                else
                                {
                                    <span class="text-muted">None</span>
                                }
                            </td>
                            <td>
                                @{
                                    var priorityBadgeClass = task.Priority switch
                                    {
                                        Priority.Low => "bg-success",
                                        Priority.Medium => "bg-info",
                                        Priority.High => "bg-warning text-dark",
                                        Priority.Urgent => "bg-danger",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @priorityBadgeClass">@task.Priority</span>
                            </td>
                            <td>
                                @if (task.IsCompleted)
                                {
                                    <span class="badge bg-success">Completed</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary">Active</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-page="/Tasks/Details" asp-route-id="@task.Id" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-eye"></i> View
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div> 