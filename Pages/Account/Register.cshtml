@page
@model TaskManagement.Pages.Account.RegisterModel
@{
    ViewData["Title"] = "Register";
}

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h2 class="text-center mb-4"><i class="bi bi-person-plus me-2"></i>Create Account</h2>
        </div>

        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    @Model.ErrorMessage
                </div>
            }
            
            <div class="row">
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        <input asp-for="RegisterInput.FirstName" class="form-control" placeholder="First Name" />
                        <label asp-for="RegisterInput.FirstName"></label>
                        <span asp-validation-for="RegisterInput.FirstName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-floating mb-3">
                        <input asp-for="RegisterInput.LastName" class="form-control" placeholder="Last Name" />
                        <label asp-for="RegisterInput.LastName"></label>
                        <span asp-validation-for="RegisterInput.LastName" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="form-floating mb-3">
                <input asp-for="RegisterInput.Username" class="form-control" placeholder="Username" />
                <label asp-for="RegisterInput.Username"></label>
                <span asp-validation-for="RegisterInput.Username" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-3">
                <input asp-for="RegisterInput.Email" class="form-control" placeholder="Email" />
                <label asp-for="RegisterInput.Email"></label>
                <span asp-validation-for="RegisterInput.Email" class="text-danger"></span>
            </div>
            
            <div class="form-floating mb-3">
                <input asp-for="RegisterInput.Password" class="form-control" placeholder="Password" />
                <label asp-for="RegisterInput.Password"></label>
                <span asp-validation-for="RegisterInput.Password" class="text-danger"></span>
                <div class="password-strength-meter mt-1">
                    <div class="password-strength-meter-fill"></div>
                </div>
            </div>
            
            <div class="form-floating mb-4">
                <input asp-for="RegisterInput.ConfirmPassword" class="form-control" placeholder="Confirm Password" />
                <label asp-for="RegisterInput.ConfirmPassword"></label>
                <span asp-validation-for="RegisterInput.ConfirmPassword" class="text-danger"></span>
            </div>
            
            <div class="d-grid gap-2 mb-3">
                <button type="submit" class="btn btn-primary btn-lg">Create Account</button>
            </div>
            
            <div class="text-center mt-4">
                <p>Already have an account? <a asp-page="/Account/Login">Sign In</a></p>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Simple password strength meter
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('RegisterInput_Password');
            const strengthMeter = document.querySelector('.password-strength-meter-fill');
            
            if (passwordInput && strengthMeter) {
                passwordInput.addEventListener('input', function() {
                    const val = passwordInput.value;
                    let strength = 0;
                    
                    if (val.length >= 8) strength += 25;
                    if (val.match(/[A-Z]/)) strength += 25;
                    if (val.match(/[0-9]/)) strength += 25;
                    if (val.match(/[^A-Za-z0-9]/)) strength += 25;
                    
                    strengthMeter.style.width = strength + '%';
                    
                    if (strength <= 25) {
                        strengthMeter.className = 'password-strength-meter-fill password-strength-weak';
                    } else if (strength <= 50) {
                        strengthMeter.className = 'password-strength-meter-fill password-strength-medium';
                    } else if (strength <= 75) {
                        strengthMeter.className = 'password-strength-meter-fill password-strength-good';
                    } else {
                        strengthMeter.className = 'password-strength-meter-fill password-strength-strong';
                    }
                });
            }
        });
    </script>
}
